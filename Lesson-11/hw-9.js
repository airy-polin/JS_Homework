//------------------------------------------------------------------------------------------------------------------------------------------------
// TASK #1
// Переписать задачу с использованием перебирающего метода массивов:

// function filterNumbersArr(numbers) {
// 	var newArr = [];

// 	for (var i = 0; i < numbers.length; i++) {
// 		var el = numbers[i];

// 		if (el > 0) {
// 			newArr[newArr.length] = el;
// 		}
// 	}

// 	return newArr;
// }

// filterNumbersArr([-1, 0, 2, 34, -2]);


// SOLUTION
function filterNumbersArr(arr) {
	return arr.filter(function(elem) {
		return elem > 0;
	});
}

var arr = [-1, 0, 2, 34, -2];

console.log(filterNumbersArr(arr));
//------------------------------------------------------------------------------------------------------------------------------------------------



//------------------------------------------------------------------------------------------------------------------------------------------------
// TASK #2
// Написать функцию, принимающую массив чисел и возвращающую первое найденное положительное число.


// SOLUTION
function findPositive(arr) {
	return arr.find(function(item) {
		return item > 0;
	});
}

var arr1 = [0, -4, -55, 7, 5, -457, 68, -2];
var arr2 = [-7, -67, 44, 0, -5];
var arr3 = [1, 1, -81, 77, 78];
var arr4 = [-3, -4, -11, -51, 0, -41, 23];

// проверки
console.log(findPositive(arr1)); // 7
console.log(findPositive(arr2)); // 44
console.log(findPositive(arr3)); // 1
console.log(findPositive(arr4)); // 23
//------------------------------------------------------------------------------------------------------------------------------------------------



//------------------------------------------------------------------------------------------------------------------------------------------------
// TASK #3
// Написать функцию, которая будет определять, является ли переданное в нее слово палиндромом (напр. шалаш).
// Регистр в словах учитываться не должен. Тестировать функцию можно только на одиночных словах (без фраз).

// Функция должна работать следущим образом:
// 	isPalindrome('шалаШ'); // true
// 	isPalindrome('привет'); // false


// SOLUTION
function isPalindrome(word) {
	var reverse = word.split('').reverse().join('');
	
	return word.toLowerCase() === reverse.toLowerCase();
}

// проверки
console.log(isPalindrome('каЗАк')); // true
console.log(isPalindrome('енот')); // false
console.log(isPalindrome('мадаМ')); // true
console.log(isPalindrome('МиМоЗа')); // false
console.log(isPalindrome('РОТАТОР')); // true
//------------------------------------------------------------------------------------------------------------------------------------------------



//------------------------------------------------------------------------------------------------------------------------------------------------
// TASK #4
// Написать функцию, которая будет определять, являются ли переданные в нее слова анаграммами (напр. кот и отк).
// Регистр в словах учитываться не должен.

// Функция должна работать следущим образом:
// 	areAnagrams('кот', 'отк'); // true
// 	areAnagrams('кот', 'атк'); // false
// 	areAnagrams('кот', 'отко'); // false


// SOLUTION
function areAnagrams(word1, word2) {
	if (word1.length !== word2.length) {
		return false;
	}

	return word1.toLowerCase().split('').sort().join('') === word2.toLowerCase().split('').sort().join('');
}

// проверки
console.log(areAnagrams('кот', 'ОТК')); // true
console.log(areAnagrams('кот', 'Атк')); // false
console.log(areAnagrams('кОт', 'отко')); // false
//------------------------------------------------------------------------------------------------------------------------------------------------



//------------------------------------------------------------------------------------------------------------------------------------------------
// TASK #5
// Написать функцию, которая будет разбивать массив на под-массивы определенной длины.

// Функция должна работать следущим образом:
// 	divideArr([1, 2, 3, 4], 2); // [[1, 2], [3, 4]]
// 	divideArr([1, 2, 3, 4, 5, 6, 7, 8], 3); // [[1, 2, 3], [4, 5, 6], [7, 8]]

// SOLUTION
function divideArr(arr, size) {
	var subArr = [];

	for (var i = 0; i < arr.length; i += size) {
		subArr.push(arr.slice(i, i + size));
	}

	return subArr;
}

var arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var arr2 = [1, 2, 3, 4, 5, 6, 7];
var arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];

// проверки 
console.log(divideArr(arr1, 2));
console.log(divideArr(arr2, 3));
console.log(divideArr(arr3, 4));

console.log(divideArr([1, 2, 3, 4], 2));
console.log(divideArr([1, 2, 3, 4, 5, 6, 7, 8], 3));
//------------------------------------------------------------------------------------------------------------------------------------------------